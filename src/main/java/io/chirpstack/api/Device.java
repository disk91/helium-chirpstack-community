// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/device.proto

// Protobuf Java Version: 3.25.1
package io.chirpstack.api;

/**
 * Protobuf type {@code api.Device}
 */
public final class Device extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:api.Device)
    DeviceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Device.newBuilder() to construct.
  private Device(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Device() {
    devEui_ = "";
    name_ = "";
    description_ = "";
    applicationId_ = "";
    deviceProfileId_ = "";
    joinEui_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Device();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.chirpstack.api.DeviceProto.internal_static_api_Device_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
      int number) {
    switch (number) {
      case 8:
        return internalGetVariables();
      case 9:
        return internalGetTags();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.chirpstack.api.DeviceProto.internal_static_api_Device_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.chirpstack.api.Device.class, io.chirpstack.api.Device.Builder.class);
  }

  public static final int DEV_EUI_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object devEui_ = "";
  /**
   * <pre>
   * DevEUI (EUI64).
   * </pre>
   *
   * <code>string dev_eui = 1;</code>
   * @return The devEui.
   */
  @java.lang.Override
  public java.lang.String getDevEui() {
    java.lang.Object ref = devEui_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      devEui_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * DevEUI (EUI64).
   * </pre>
   *
   * <code>string dev_eui = 1;</code>
   * @return The bytes for devEui.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDevEuiBytes() {
    java.lang.Object ref = devEui_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      devEui_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object description_ = "";
  /**
   * <pre>
   * Description.
   * </pre>
   *
   * <code>string description = 3;</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      description_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Description.
   * </pre>
   *
   * <code>string description = 3;</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    java.lang.Object ref = description_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      description_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int APPLICATION_ID_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object applicationId_ = "";
  /**
   * <pre>
   * Application ID (UUID).
   * </pre>
   *
   * <code>string application_id = 4;</code>
   * @return The applicationId.
   */
  @java.lang.Override
  public java.lang.String getApplicationId() {
    java.lang.Object ref = applicationId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      applicationId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Application ID (UUID).
   * </pre>
   *
   * <code>string application_id = 4;</code>
   * @return The bytes for applicationId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getApplicationIdBytes() {
    java.lang.Object ref = applicationId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      applicationId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEVICE_PROFILE_ID_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object deviceProfileId_ = "";
  /**
   * <pre>
   * Device-profile ID (UUID).
   * </pre>
   *
   * <code>string device_profile_id = 5;</code>
   * @return The deviceProfileId.
   */
  @java.lang.Override
  public java.lang.String getDeviceProfileId() {
    java.lang.Object ref = deviceProfileId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deviceProfileId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Device-profile ID (UUID).
   * </pre>
   *
   * <code>string device_profile_id = 5;</code>
   * @return The bytes for deviceProfileId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeviceProfileIdBytes() {
    java.lang.Object ref = deviceProfileId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deviceProfileId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SKIP_FCNT_CHECK_FIELD_NUMBER = 6;
  private boolean skipFcntCheck_ = false;
  /**
   * <pre>
   * Skip frame-counter checks (this is insecure, but could be helpful for
   * debugging).
   * </pre>
   *
   * <code>bool skip_fcnt_check = 6;</code>
   * @return The skipFcntCheck.
   */
  @java.lang.Override
  public boolean getSkipFcntCheck() {
    return skipFcntCheck_;
  }

  public static final int IS_DISABLED_FIELD_NUMBER = 7;
  private boolean isDisabled_ = false;
  /**
   * <pre>
   * Device is disabled.
   * </pre>
   *
   * <code>bool is_disabled = 7;</code>
   * @return The isDisabled.
   */
  @java.lang.Override
  public boolean getIsDisabled() {
    return isDisabled_;
  }

  public static final int VARIABLES_FIELD_NUMBER = 8;
  private static final class VariablesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.chirpstack.api.DeviceProto.internal_static_api_Device_VariablesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> variables_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetVariables() {
    if (variables_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          VariablesDefaultEntryHolder.defaultEntry);
    }
    return variables_;
  }
  public int getVariablesCount() {
    return internalGetVariables().getMap().size();
  }
  /**
   * <pre>
   * Variables (user defined).
   * These variables can be used together with integrations to store tokens /
   * secrets that must be configured per device. These variables are not
   * exposed in the event payloads.
   * </pre>
   *
   * <code>map&lt;string, string&gt; variables = 8;</code>
   */
  @java.lang.Override
  public boolean containsVariables(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetVariables().getMap().containsKey(key);
  }
  /**
   * Use {@link #getVariablesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getVariables() {
    return getVariablesMap();
  }
  /**
   * <pre>
   * Variables (user defined).
   * These variables can be used together with integrations to store tokens /
   * secrets that must be configured per device. These variables are not
   * exposed in the event payloads.
   * </pre>
   *
   * <code>map&lt;string, string&gt; variables = 8;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getVariablesMap() {
    return internalGetVariables().getMap();
  }
  /**
   * <pre>
   * Variables (user defined).
   * These variables can be used together with integrations to store tokens /
   * secrets that must be configured per device. These variables are not
   * exposed in the event payloads.
   * </pre>
   *
   * <code>map&lt;string, string&gt; variables = 8;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getVariablesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetVariables().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Variables (user defined).
   * These variables can be used together with integrations to store tokens /
   * secrets that must be configured per device. These variables are not
   * exposed in the event payloads.
   * </pre>
   *
   * <code>map&lt;string, string&gt; variables = 8;</code>
   */
  @java.lang.Override
  public java.lang.String getVariablesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetVariables().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int TAGS_FIELD_NUMBER = 9;
  private static final class TagsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                io.chirpstack.api.DeviceProto.internal_static_api_Device_TagsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> tags_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetTags() {
    if (tags_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TagsDefaultEntryHolder.defaultEntry);
    }
    return tags_;
  }
  public int getTagsCount() {
    return internalGetTags().getMap().size();
  }
  /**
   * <pre>
   * Tags (user defined).
   * These tags can be used to add additional information to the device.
   * These tags are exposed in all the integration events.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 9;</code>
   */
  @java.lang.Override
  public boolean containsTags(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetTags().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTagsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getTags() {
    return getTagsMap();
  }
  /**
   * <pre>
   * Tags (user defined).
   * These tags can be used to add additional information to the device.
   * These tags are exposed in all the integration events.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 9;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
    return internalGetTags().getMap();
  }
  /**
   * <pre>
   * Tags (user defined).
   * These tags can be used to add additional information to the device.
   * These tags are exposed in all the integration events.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 9;</code>
   */
  @java.lang.Override
  public /* nullable */
java.lang.String getTagsOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTags().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Tags (user defined).
   * These tags can be used to add additional information to the device.
   * These tags are exposed in all the integration events.
   * </pre>
   *
   * <code>map&lt;string, string&gt; tags = 9;</code>
   */
  @java.lang.Override
  public java.lang.String getTagsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTags().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int JOIN_EUI_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private volatile java.lang.Object joinEui_ = "";
  /**
   * <pre>
   * JoinEUI (optional, EUI64).
   * This field will be automatically set / updated on OTAA. However, in some
   * cases it must be pre-configured. For example to allow OTAA using a Relay.
   * In this case the Relay needs to know the JoinEUI + DevEUI combinations
   * of the devices for which it needs to forward uplinks.
   * </pre>
   *
   * <code>string join_eui = 10;</code>
   * @return The joinEui.
   */
  @java.lang.Override
  public java.lang.String getJoinEui() {
    java.lang.Object ref = joinEui_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      joinEui_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * JoinEUI (optional, EUI64).
   * This field will be automatically set / updated on OTAA. However, in some
   * cases it must be pre-configured. For example to allow OTAA using a Relay.
   * In this case the Relay needs to know the JoinEUI + DevEUI combinations
   * of the devices for which it needs to forward uplinks.
   * </pre>
   *
   * <code>string join_eui = 10;</code>
   * @return The bytes for joinEui.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getJoinEuiBytes() {
    java.lang.Object ref = joinEui_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      joinEui_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(devEui_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, devEui_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(applicationId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, applicationId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceProfileId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, deviceProfileId_);
    }
    if (skipFcntCheck_ != false) {
      output.writeBool(6, skipFcntCheck_);
    }
    if (isDisabled_ != false) {
      output.writeBool(7, isDisabled_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetVariables(),
        VariablesDefaultEntryHolder.defaultEntry,
        8);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTags(),
        TagsDefaultEntryHolder.defaultEntry,
        9);
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(joinEui_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, joinEui_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(devEui_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, devEui_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, description_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(applicationId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, applicationId_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(deviceProfileId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, deviceProfileId_);
    }
    if (skipFcntCheck_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, skipFcntCheck_);
    }
    if (isDisabled_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, isDisabled_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetVariables().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      variables__ = VariablesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, variables__);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetTags().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      tags__ = TagsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, tags__);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(joinEui_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, joinEui_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.chirpstack.api.Device)) {
      return super.equals(obj);
    }
    io.chirpstack.api.Device other = (io.chirpstack.api.Device) obj;

    if (!getDevEui()
        .equals(other.getDevEui())) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getDescription()
        .equals(other.getDescription())) return false;
    if (!getApplicationId()
        .equals(other.getApplicationId())) return false;
    if (!getDeviceProfileId()
        .equals(other.getDeviceProfileId())) return false;
    if (getSkipFcntCheck()
        != other.getSkipFcntCheck()) return false;
    if (getIsDisabled()
        != other.getIsDisabled()) return false;
    if (!internalGetVariables().equals(
        other.internalGetVariables())) return false;
    if (!internalGetTags().equals(
        other.internalGetTags())) return false;
    if (!getJoinEui()
        .equals(other.getJoinEui())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DEV_EUI_FIELD_NUMBER;
    hash = (53 * hash) + getDevEui().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
    hash = (53 * hash) + getDescription().hashCode();
    hash = (37 * hash) + APPLICATION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getApplicationId().hashCode();
    hash = (37 * hash) + DEVICE_PROFILE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDeviceProfileId().hashCode();
    hash = (37 * hash) + SKIP_FCNT_CHECK_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSkipFcntCheck());
    hash = (37 * hash) + IS_DISABLED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsDisabled());
    if (!internalGetVariables().getMap().isEmpty()) {
      hash = (37 * hash) + VARIABLES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetVariables().hashCode();
    }
    if (!internalGetTags().getMap().isEmpty()) {
      hash = (37 * hash) + TAGS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTags().hashCode();
    }
    hash = (37 * hash) + JOIN_EUI_FIELD_NUMBER;
    hash = (53 * hash) + getJoinEui().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.chirpstack.api.Device parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.Device parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.Device parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.Device parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.Device parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.chirpstack.api.Device parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.chirpstack.api.Device parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.Device parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.chirpstack.api.Device parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.chirpstack.api.Device parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.chirpstack.api.Device parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.chirpstack.api.Device parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.chirpstack.api.Device prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code api.Device}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:api.Device)
      io.chirpstack.api.DeviceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.chirpstack.api.DeviceProto.internal_static_api_Device_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 8:
          return internalGetVariables();
        case 9:
          return internalGetTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
        int number) {
      switch (number) {
        case 8:
          return internalGetMutableVariables();
        case 9:
          return internalGetMutableTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.chirpstack.api.DeviceProto.internal_static_api_Device_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.chirpstack.api.Device.class, io.chirpstack.api.Device.Builder.class);
    }

    // Construct using io.chirpstack.api.Device.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      devEui_ = "";
      name_ = "";
      description_ = "";
      applicationId_ = "";
      deviceProfileId_ = "";
      skipFcntCheck_ = false;
      isDisabled_ = false;
      internalGetMutableVariables().clear();
      internalGetMutableTags().clear();
      joinEui_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.chirpstack.api.DeviceProto.internal_static_api_Device_descriptor;
    }

    @java.lang.Override
    public io.chirpstack.api.Device getDefaultInstanceForType() {
      return io.chirpstack.api.Device.getDefaultInstance();
    }

    @java.lang.Override
    public io.chirpstack.api.Device build() {
      io.chirpstack.api.Device result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.chirpstack.api.Device buildPartial() {
      io.chirpstack.api.Device result = new io.chirpstack.api.Device(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.chirpstack.api.Device result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.devEui_ = devEui_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.description_ = description_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.applicationId_ = applicationId_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.deviceProfileId_ = deviceProfileId_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.skipFcntCheck_ = skipFcntCheck_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.isDisabled_ = isDisabled_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.variables_ = internalGetVariables();
        result.variables_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.joinEui_ = joinEui_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.chirpstack.api.Device) {
        return mergeFrom((io.chirpstack.api.Device)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.chirpstack.api.Device other) {
      if (other == io.chirpstack.api.Device.getDefaultInstance()) return this;
      if (!other.getDevEui().isEmpty()) {
        devEui_ = other.devEui_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (!other.getDescription().isEmpty()) {
        description_ = other.description_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.getApplicationId().isEmpty()) {
        applicationId_ = other.applicationId_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getDeviceProfileId().isEmpty()) {
        deviceProfileId_ = other.deviceProfileId_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getSkipFcntCheck() != false) {
        setSkipFcntCheck(other.getSkipFcntCheck());
      }
      if (other.getIsDisabled() != false) {
        setIsDisabled(other.getIsDisabled());
      }
      internalGetMutableVariables().mergeFrom(
          other.internalGetVariables());
      bitField0_ |= 0x00000080;
      internalGetMutableTags().mergeFrom(
          other.internalGetTags());
      bitField0_ |= 0x00000100;
      if (!other.getJoinEui().isEmpty()) {
        joinEui_ = other.joinEui_;
        bitField0_ |= 0x00000200;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              devEui_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              description_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              applicationId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              deviceProfileId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              skipFcntCheck_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 56: {
              isDisabled_ = input.readBool();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            case 66: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              variables__ = input.readMessage(
                  VariablesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableVariables().getMutableMap().put(
                  variables__.getKey(), variables__.getValue());
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              tags__ = input.readMessage(
                  TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableTags().getMutableMap().put(
                  tags__.getKey(), tags__.getValue());
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 82: {
              joinEui_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000200;
              break;
            } // case 82
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object devEui_ = "";
    /**
     * <pre>
     * DevEUI (EUI64).
     * </pre>
     *
     * <code>string dev_eui = 1;</code>
     * @return The devEui.
     */
    public java.lang.String getDevEui() {
      java.lang.Object ref = devEui_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        devEui_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * DevEUI (EUI64).
     * </pre>
     *
     * <code>string dev_eui = 1;</code>
     * @return The bytes for devEui.
     */
    public com.google.protobuf.ByteString
        getDevEuiBytes() {
      java.lang.Object ref = devEui_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        devEui_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * DevEUI (EUI64).
     * </pre>
     *
     * <code>string dev_eui = 1;</code>
     * @param value The devEui to set.
     * @return This builder for chaining.
     */
    public Builder setDevEui(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      devEui_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DevEUI (EUI64).
     * </pre>
     *
     * <code>string dev_eui = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDevEui() {
      devEui_ = getDefaultInstance().getDevEui();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DevEUI (EUI64).
     * </pre>
     *
     * <code>string dev_eui = 1;</code>
     * @param value The bytes for devEui to set.
     * @return This builder for chaining.
     */
    public Builder setDevEuiBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      devEui_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private java.lang.Object description_ = "";
    /**
     * <pre>
     * Description.
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The description.
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Description.
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return The bytes for description.
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Description.
     * </pre>
     *
     * <code>string description = 3;</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description.
     * </pre>
     *
     * <code>string description = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      description_ = getDefaultInstance().getDescription();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Description.
     * </pre>
     *
     * <code>string description = 3;</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      description_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.lang.Object applicationId_ = "";
    /**
     * <pre>
     * Application ID (UUID).
     * </pre>
     *
     * <code>string application_id = 4;</code>
     * @return The applicationId.
     */
    public java.lang.String getApplicationId() {
      java.lang.Object ref = applicationId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        applicationId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Application ID (UUID).
     * </pre>
     *
     * <code>string application_id = 4;</code>
     * @return The bytes for applicationId.
     */
    public com.google.protobuf.ByteString
        getApplicationIdBytes() {
      java.lang.Object ref = applicationId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        applicationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Application ID (UUID).
     * </pre>
     *
     * <code>string application_id = 4;</code>
     * @param value The applicationId to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      applicationId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Application ID (UUID).
     * </pre>
     *
     * <code>string application_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearApplicationId() {
      applicationId_ = getDefaultInstance().getApplicationId();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Application ID (UUID).
     * </pre>
     *
     * <code>string application_id = 4;</code>
     * @param value The bytes for applicationId to set.
     * @return This builder for chaining.
     */
    public Builder setApplicationIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      applicationId_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object deviceProfileId_ = "";
    /**
     * <pre>
     * Device-profile ID (UUID).
     * </pre>
     *
     * <code>string device_profile_id = 5;</code>
     * @return The deviceProfileId.
     */
    public java.lang.String getDeviceProfileId() {
      java.lang.Object ref = deviceProfileId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceProfileId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Device-profile ID (UUID).
     * </pre>
     *
     * <code>string device_profile_id = 5;</code>
     * @return The bytes for deviceProfileId.
     */
    public com.google.protobuf.ByteString
        getDeviceProfileIdBytes() {
      java.lang.Object ref = deviceProfileId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceProfileId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Device-profile ID (UUID).
     * </pre>
     *
     * <code>string device_profile_id = 5;</code>
     * @param value The deviceProfileId to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceProfileId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      deviceProfileId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device-profile ID (UUID).
     * </pre>
     *
     * <code>string device_profile_id = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeviceProfileId() {
      deviceProfileId_ = getDefaultInstance().getDeviceProfileId();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device-profile ID (UUID).
     * </pre>
     *
     * <code>string device_profile_id = 5;</code>
     * @param value The bytes for deviceProfileId to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceProfileIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      deviceProfileId_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private boolean skipFcntCheck_ ;
    /**
     * <pre>
     * Skip frame-counter checks (this is insecure, but could be helpful for
     * debugging).
     * </pre>
     *
     * <code>bool skip_fcnt_check = 6;</code>
     * @return The skipFcntCheck.
     */
    @java.lang.Override
    public boolean getSkipFcntCheck() {
      return skipFcntCheck_;
    }
    /**
     * <pre>
     * Skip frame-counter checks (this is insecure, but could be helpful for
     * debugging).
     * </pre>
     *
     * <code>bool skip_fcnt_check = 6;</code>
     * @param value The skipFcntCheck to set.
     * @return This builder for chaining.
     */
    public Builder setSkipFcntCheck(boolean value) {

      skipFcntCheck_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Skip frame-counter checks (this is insecure, but could be helpful for
     * debugging).
     * </pre>
     *
     * <code>bool skip_fcnt_check = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearSkipFcntCheck() {
      bitField0_ = (bitField0_ & ~0x00000020);
      skipFcntCheck_ = false;
      onChanged();
      return this;
    }

    private boolean isDisabled_ ;
    /**
     * <pre>
     * Device is disabled.
     * </pre>
     *
     * <code>bool is_disabled = 7;</code>
     * @return The isDisabled.
     */
    @java.lang.Override
    public boolean getIsDisabled() {
      return isDisabled_;
    }
    /**
     * <pre>
     * Device is disabled.
     * </pre>
     *
     * <code>bool is_disabled = 7;</code>
     * @param value The isDisabled to set.
     * @return This builder for chaining.
     */
    public Builder setIsDisabled(boolean value) {

      isDisabled_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Device is disabled.
     * </pre>
     *
     * <code>bool is_disabled = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsDisabled() {
      bitField0_ = (bitField0_ & ~0x00000040);
      isDisabled_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> variables_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetVariables() {
      if (variables_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            VariablesDefaultEntryHolder.defaultEntry);
      }
      return variables_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableVariables() {
      if (variables_ == null) {
        variables_ = com.google.protobuf.MapField.newMapField(
            VariablesDefaultEntryHolder.defaultEntry);
      }
      if (!variables_.isMutable()) {
        variables_ = variables_.copy();
      }
      bitField0_ |= 0x00000080;
      onChanged();
      return variables_;
    }
    public int getVariablesCount() {
      return internalGetVariables().getMap().size();
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    @java.lang.Override
    public boolean containsVariables(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetVariables().getMap().containsKey(key);
    }
    /**
     * Use {@link #getVariablesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getVariables() {
      return getVariablesMap();
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getVariablesMap() {
      return internalGetVariables().getMap();
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getVariablesOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetVariables().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    @java.lang.Override
    public java.lang.String getVariablesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetVariables().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearVariables() {
      bitField0_ = (bitField0_ & ~0x00000080);
      internalGetMutableVariables().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    public Builder removeVariables(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableVariables().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableVariables() {
      bitField0_ |= 0x00000080;
      return internalGetMutableVariables().getMutableMap();
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    public Builder putVariables(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableVariables().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000080;
      return this;
    }
    /**
     * <pre>
     * Variables (user defined).
     * These variables can be used together with integrations to store tokens /
     * secrets that must be configured per device. These variables are not
     * exposed in the event payloads.
     * </pre>
     *
     * <code>map&lt;string, string&gt; variables = 8;</code>
     */
    public Builder putAllVariables(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableVariables().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000080;
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tags_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetTags() {
      if (tags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
        internalGetMutableTags() {
      if (tags_ == null) {
        tags_ = com.google.protobuf.MapField.newMapField(
            TagsDefaultEntryHolder.defaultEntry);
      }
      if (!tags_.isMutable()) {
        tags_ = tags_.copy();
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return tags_;
    }
    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    @java.lang.Override
    public boolean containsTags(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTags().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTags() {
      return getTagsMap();
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getTagsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    @java.lang.Override
    public java.lang.String getTagsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearTags() {
      bitField0_ = (bitField0_ & ~0x00000100);
      internalGetMutableTags().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    public Builder removeTags(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableTags().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
        getMutableTags() {
      bitField0_ |= 0x00000100;
      return internalGetMutableTags().getMutableMap();
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    public Builder putTags(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableTags().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000100;
      return this;
    }
    /**
     * <pre>
     * Tags (user defined).
     * These tags can be used to add additional information to the device.
     * These tags are exposed in all the integration events.
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 9;</code>
     */
    public Builder putAllTags(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableTags().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000100;
      return this;
    }

    private java.lang.Object joinEui_ = "";
    /**
     * <pre>
     * JoinEUI (optional, EUI64).
     * This field will be automatically set / updated on OTAA. However, in some
     * cases it must be pre-configured. For example to allow OTAA using a Relay.
     * In this case the Relay needs to know the JoinEUI + DevEUI combinations
     * of the devices for which it needs to forward uplinks.
     * </pre>
     *
     * <code>string join_eui = 10;</code>
     * @return The joinEui.
     */
    public java.lang.String getJoinEui() {
      java.lang.Object ref = joinEui_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        joinEui_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * JoinEUI (optional, EUI64).
     * This field will be automatically set / updated on OTAA. However, in some
     * cases it must be pre-configured. For example to allow OTAA using a Relay.
     * In this case the Relay needs to know the JoinEUI + DevEUI combinations
     * of the devices for which it needs to forward uplinks.
     * </pre>
     *
     * <code>string join_eui = 10;</code>
     * @return The bytes for joinEui.
     */
    public com.google.protobuf.ByteString
        getJoinEuiBytes() {
      java.lang.Object ref = joinEui_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        joinEui_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * JoinEUI (optional, EUI64).
     * This field will be automatically set / updated on OTAA. However, in some
     * cases it must be pre-configured. For example to allow OTAA using a Relay.
     * In this case the Relay needs to know the JoinEUI + DevEUI combinations
     * of the devices for which it needs to forward uplinks.
     * </pre>
     *
     * <code>string join_eui = 10;</code>
     * @param value The joinEui to set.
     * @return This builder for chaining.
     */
    public Builder setJoinEui(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      joinEui_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JoinEUI (optional, EUI64).
     * This field will be automatically set / updated on OTAA. However, in some
     * cases it must be pre-configured. For example to allow OTAA using a Relay.
     * In this case the Relay needs to know the JoinEUI + DevEUI combinations
     * of the devices for which it needs to forward uplinks.
     * </pre>
     *
     * <code>string join_eui = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearJoinEui() {
      joinEui_ = getDefaultInstance().getJoinEui();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * JoinEUI (optional, EUI64).
     * This field will be automatically set / updated on OTAA. However, in some
     * cases it must be pre-configured. For example to allow OTAA using a Relay.
     * In this case the Relay needs to know the JoinEUI + DevEUI combinations
     * of the devices for which it needs to forward uplinks.
     * </pre>
     *
     * <code>string join_eui = 10;</code>
     * @param value The bytes for joinEui to set.
     * @return This builder for chaining.
     */
    public Builder setJoinEuiBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      joinEui_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:api.Device)
  }

  // @@protoc_insertion_point(class_scope:api.Device)
  private static final io.chirpstack.api.Device DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.chirpstack.api.Device();
  }

  public static io.chirpstack.api.Device getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Device>
      PARSER = new com.google.protobuf.AbstractParser<Device>() {
    @java.lang.Override
    public Device parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Device> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Device> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.chirpstack.api.Device getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

