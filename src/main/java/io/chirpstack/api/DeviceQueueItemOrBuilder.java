// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/device.proto

package io.chirpstack.api;

public interface DeviceQueueItemOrBuilder extends
    // @@protoc_insertion_point(interface_extends:api.DeviceQueueItem)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * ID (UUID).
   * This is automatically generated on enqueue.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  String getId();
  /**
   * <pre>
   * ID (UUID).
   * This is automatically generated on enqueue.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * Device EUI (EUI64).
   * </pre>
   *
   * <code>string dev_eui = 2;</code>
   * @return The devEui.
   */
  String getDevEui();
  /**
   * <pre>
   * Device EUI (EUI64).
   * </pre>
   *
   * <code>string dev_eui = 2;</code>
   * @return The bytes for devEui.
   */
  com.google.protobuf.ByteString
      getDevEuiBytes();

  /**
   * <pre>
   * Confirmed.
   * </pre>
   *
   * <code>bool confirmed = 3;</code>
   * @return The confirmed.
   */
  boolean getConfirmed();

  /**
   * <pre>
   * FPort (must be &gt; 0).
   * </pre>
   *
   * <code>uint32 f_port = 4;</code>
   * @return The fPort.
   */
  int getFPort();

  /**
   * <pre>
   * Data.
   * Or use the json_object field when a codec has been configured.
   * </pre>
   *
   * <code>bytes data = 5;</code>
   * @return The data.
   */
  com.google.protobuf.ByteString getData();

  /**
   * <pre>
   * Only use this when a codec has been configured that can encode this
   * object to bytes.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 6;</code>
   * @return Whether the object field is set.
   */
  boolean hasObject();
  /**
   * <pre>
   * Only use this when a codec has been configured that can encode this
   * object to bytes.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 6;</code>
   * @return The object.
   */
  com.google.protobuf.Struct getObject();
  /**
   * <pre>
   * Only use this when a codec has been configured that can encode this
   * object to bytes.
   * </pre>
   *
   * <code>.google.protobuf.Struct object = 6;</code>
   */
  com.google.protobuf.StructOrBuilder getObjectOrBuilder();

  /**
   * <pre>
   * Is pending.
   * This is set by ChirpStack to true when the downlink is pending (e.g. it
   * has been sent, but a confirmation is still pending).
   * </pre>
   *
   * <code>bool is_pending = 7;</code>
   * @return The isPending.
   */
  boolean getIsPending();

  /**
   * <pre>
   * Downlink frame-counter.
   * Do not set this for plain-text data payloads. It will be automatically set
   * by ChirpStack when the payload has been sent as downlink.
   * </pre>
   *
   * <code>uint32 f_cnt_down = 8;</code>
   * @return The fCntDown.
   */
  int getFCntDown();

  /**
   * <pre>
   * Is encrypted.
   * This must be set to true if the end-application has already encrypted
   * the data payload. In this case, the f_cnt_down field must be set to
   * the corresponding frame-counter which has been used during the encryption.
   * </pre>
   *
   * <code>bool is_encrypted = 9;</code>
   * @return The isEncrypted.
   */
  boolean getIsEncrypted();
}
