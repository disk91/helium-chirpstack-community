// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

// Protobuf Java Version: 3.25.1
package io.chirpstack.api;

/**
 * Protobuf enum {@code common.Region}
 */
public enum Region
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * EU868
   * </pre>
   *
   * <code>EU868 = 0;</code>
   */
  EU868(0),
  /**
   * <pre>
   * US915
   * </pre>
   *
   * <code>US915 = 2;</code>
   */
  US915(2),
  /**
   * <pre>
   * CN779
   * </pre>
   *
   * <code>CN779 = 3;</code>
   */
  CN779(3),
  /**
   * <pre>
   * EU433
   * </pre>
   *
   * <code>EU433 = 4;</code>
   */
  EU433(4),
  /**
   * <pre>
   * AU915
   * </pre>
   *
   * <code>AU915 = 5;</code>
   */
  AU915(5),
  /**
   * <pre>
   * CN470
   * </pre>
   *
   * <code>CN470 = 6;</code>
   */
  CN470(6),
  /**
   * <pre>
   * AS923
   * </pre>
   *
   * <code>AS923 = 7;</code>
   */
  AS923(7),
  /**
   * <pre>
   * AS923 with -1.80 MHz frequency offset
   * </pre>
   *
   * <code>AS923_2 = 12;</code>
   */
  AS923_2(12),
  /**
   * <pre>
   * AS923 with -6.60 MHz frequency offset
   * </pre>
   *
   * <code>AS923_3 = 13;</code>
   */
  AS923_3(13),
  /**
   * <pre>
   * (AS923 with -5.90 MHz frequency offset).
   * </pre>
   *
   * <code>AS923_4 = 14;</code>
   */
  AS923_4(14),
  /**
   * <pre>
   * KR920
   * </pre>
   *
   * <code>KR920 = 8;</code>
   */
  KR920(8),
  /**
   * <pre>
   * IN865
   * </pre>
   *
   * <code>IN865 = 9;</code>
   */
  IN865(9),
  /**
   * <pre>
   * RU864
   * </pre>
   *
   * <code>RU864 = 10;</code>
   */
  RU864(10),
  /**
   * <pre>
   * ISM2400 (LoRaWAN 2.4 GHz)
   * </pre>
   *
   * <code>ISM2400 = 11;</code>
   */
  ISM2400(11),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * EU868
   * </pre>
   *
   * <code>EU868 = 0;</code>
   */
  public static final int EU868_VALUE = 0;
  /**
   * <pre>
   * US915
   * </pre>
   *
   * <code>US915 = 2;</code>
   */
  public static final int US915_VALUE = 2;
  /**
   * <pre>
   * CN779
   * </pre>
   *
   * <code>CN779 = 3;</code>
   */
  public static final int CN779_VALUE = 3;
  /**
   * <pre>
   * EU433
   * </pre>
   *
   * <code>EU433 = 4;</code>
   */
  public static final int EU433_VALUE = 4;
  /**
   * <pre>
   * AU915
   * </pre>
   *
   * <code>AU915 = 5;</code>
   */
  public static final int AU915_VALUE = 5;
  /**
   * <pre>
   * CN470
   * </pre>
   *
   * <code>CN470 = 6;</code>
   */
  public static final int CN470_VALUE = 6;
  /**
   * <pre>
   * AS923
   * </pre>
   *
   * <code>AS923 = 7;</code>
   */
  public static final int AS923_VALUE = 7;
  /**
   * <pre>
   * AS923 with -1.80 MHz frequency offset
   * </pre>
   *
   * <code>AS923_2 = 12;</code>
   */
  public static final int AS923_2_VALUE = 12;
  /**
   * <pre>
   * AS923 with -6.60 MHz frequency offset
   * </pre>
   *
   * <code>AS923_3 = 13;</code>
   */
  public static final int AS923_3_VALUE = 13;
  /**
   * <pre>
   * (AS923 with -5.90 MHz frequency offset).
   * </pre>
   *
   * <code>AS923_4 = 14;</code>
   */
  public static final int AS923_4_VALUE = 14;
  /**
   * <pre>
   * KR920
   * </pre>
   *
   * <code>KR920 = 8;</code>
   */
  public static final int KR920_VALUE = 8;
  /**
   * <pre>
   * IN865
   * </pre>
   *
   * <code>IN865 = 9;</code>
   */
  public static final int IN865_VALUE = 9;
  /**
   * <pre>
   * RU864
   * </pre>
   *
   * <code>RU864 = 10;</code>
   */
  public static final int RU864_VALUE = 10;
  /**
   * <pre>
   * ISM2400 (LoRaWAN 2.4 GHz)
   * </pre>
   *
   * <code>ISM2400 = 11;</code>
   */
  public static final int ISM2400_VALUE = 11;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Region valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Region forNumber(int value) {
    switch (value) {
      case 0: return EU868;
      case 2: return US915;
      case 3: return CN779;
      case 4: return EU433;
      case 5: return AU915;
      case 6: return CN470;
      case 7: return AS923;
      case 12: return AS923_2;
      case 13: return AS923_3;
      case 14: return AS923_4;
      case 8: return KR920;
      case 9: return IN865;
      case 10: return RU864;
      case 11: return ISM2400;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Region>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Region> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Region>() {
          public Region findValueByNumber(int number) {
            return Region.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.chirpstack.api.CommonProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final Region[] VALUES = values();

  public static Region valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Region(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:common.Region)
}

