// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

// Protobuf Java Version: 3.25.1
package io.chirpstack.api;

/**
 * Protobuf enum {@code common.MType}
 */
public enum MType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * JoinRequest.
   * </pre>
   *
   * <code>JOIN_REQUEST = 0;</code>
   */
  JOIN_REQUEST(0),
  /**
   * <pre>
   * JoinAccept.
   * </pre>
   *
   * <code>JOIN_ACCEPT = 1;</code>
   */
  JOIN_ACCEPT(1),
  /**
   * <pre>
   * UnconfirmedDataUp.
   * </pre>
   *
   * <code>UNCONFIRMED_DATA_UP = 2;</code>
   */
  UNCONFIRMED_DATA_UP(2),
  /**
   * <pre>
   * UnconfirmedDataDown.
   * </pre>
   *
   * <code>UNCONFIRMED_DATA_DOWN = 3;</code>
   */
  UNCONFIRMED_DATA_DOWN(3),
  /**
   * <pre>
   * ConfirmedDataUp.
   * </pre>
   *
   * <code>CONFIRMED_DATA_UP = 4;</code>
   */
  CONFIRMED_DATA_UP(4),
  /**
   * <pre>
   * ConfirmedDataDown.
   * </pre>
   *
   * <code>CONFIRMED_DATA_DOWN = 5;</code>
   */
  CONFIRMED_DATA_DOWN(5),
  /**
   * <pre>
   * RejoinRequest.
   * </pre>
   *
   * <code>REJOIN_REQUEST = 6;</code>
   */
  REJOIN_REQUEST(6),
  /**
   * <pre>
   * Proprietary.
   * </pre>
   *
   * <code>PROPRIETARY = 7;</code>
   */
  PROPRIETARY(7),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * JoinRequest.
   * </pre>
   *
   * <code>JOIN_REQUEST = 0;</code>
   */
  public static final int JOIN_REQUEST_VALUE = 0;
  /**
   * <pre>
   * JoinAccept.
   * </pre>
   *
   * <code>JOIN_ACCEPT = 1;</code>
   */
  public static final int JOIN_ACCEPT_VALUE = 1;
  /**
   * <pre>
   * UnconfirmedDataUp.
   * </pre>
   *
   * <code>UNCONFIRMED_DATA_UP = 2;</code>
   */
  public static final int UNCONFIRMED_DATA_UP_VALUE = 2;
  /**
   * <pre>
   * UnconfirmedDataDown.
   * </pre>
   *
   * <code>UNCONFIRMED_DATA_DOWN = 3;</code>
   */
  public static final int UNCONFIRMED_DATA_DOWN_VALUE = 3;
  /**
   * <pre>
   * ConfirmedDataUp.
   * </pre>
   *
   * <code>CONFIRMED_DATA_UP = 4;</code>
   */
  public static final int CONFIRMED_DATA_UP_VALUE = 4;
  /**
   * <pre>
   * ConfirmedDataDown.
   * </pre>
   *
   * <code>CONFIRMED_DATA_DOWN = 5;</code>
   */
  public static final int CONFIRMED_DATA_DOWN_VALUE = 5;
  /**
   * <pre>
   * RejoinRequest.
   * </pre>
   *
   * <code>REJOIN_REQUEST = 6;</code>
   */
  public static final int REJOIN_REQUEST_VALUE = 6;
  /**
   * <pre>
   * Proprietary.
   * </pre>
   *
   * <code>PROPRIETARY = 7;</code>
   */
  public static final int PROPRIETARY_VALUE = 7;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MType forNumber(int value) {
    switch (value) {
      case 0: return JOIN_REQUEST;
      case 1: return JOIN_ACCEPT;
      case 2: return UNCONFIRMED_DATA_UP;
      case 3: return UNCONFIRMED_DATA_DOWN;
      case 4: return CONFIRMED_DATA_UP;
      case 5: return CONFIRMED_DATA_DOWN;
      case 6: return REJOIN_REQUEST;
      case 7: return PROPRIETARY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MType>() {
          public MType findValueByNumber(int number) {
            return MType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.chirpstack.api.CommonProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final MType[] VALUES = values();

  public static MType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:common.MType)
}

