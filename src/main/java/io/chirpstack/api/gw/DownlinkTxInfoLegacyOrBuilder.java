// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gw/gw.proto

package io.chirpstack.api.gw;

public interface DownlinkTxInfoLegacyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:gw.DownlinkTxInfoLegacy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Gateway ID.
   * Deprecated: replaced by gateway_id in DownlinkFrame.
   * </pre>
   *
   * <code>bytes gateway_id = 1;</code>
   * @return The gatewayId.
   */
  com.google.protobuf.ByteString getGatewayId();

  /**
   * <pre>
   * TX frequency (in Hz).
   * </pre>
   *
   * <code>uint32 frequency = 5;</code>
   * @return The frequency.
   */
  int getFrequency();

  /**
   * <pre>
   * TX power (in dBm EIRP).
   * </pre>
   *
   * <code>int32 power = 6;</code>
   * @return The power.
   */
  int getPower();

  /**
   * <pre>
   * Modulation.
   * </pre>
   *
   * <code>.common.Modulation modulation = 7;</code>
   * @return The enum numeric value on the wire for modulation.
   */
  int getModulationValue();
  /**
   * <pre>
   * Modulation.
   * </pre>
   *
   * <code>.common.Modulation modulation = 7;</code>
   * @return The modulation.
   */
  io.chirpstack.api.Modulation getModulation();

  /**
   * <pre>
   * LoRa modulation information.
   * </pre>
   *
   * <code>.gw.LoraModulationInfo lora_modulation_info = 8;</code>
   * @return Whether the loraModulationInfo field is set.
   */
  boolean hasLoraModulationInfo();
  /**
   * <pre>
   * LoRa modulation information.
   * </pre>
   *
   * <code>.gw.LoraModulationInfo lora_modulation_info = 8;</code>
   * @return The loraModulationInfo.
   */
  io.chirpstack.api.gw.LoraModulationInfo getLoraModulationInfo();
  /**
   * <pre>
   * LoRa modulation information.
   * </pre>
   *
   * <code>.gw.LoraModulationInfo lora_modulation_info = 8;</code>
   */
  io.chirpstack.api.gw.LoraModulationInfoOrBuilder getLoraModulationInfoOrBuilder();

  /**
   * <pre>
   * FSK modulation information.
   * </pre>
   *
   * <code>.gw.FskModulationInfo fsk_modulation_info = 9;</code>
   * @return Whether the fskModulationInfo field is set.
   */
  boolean hasFskModulationInfo();
  /**
   * <pre>
   * FSK modulation information.
   * </pre>
   *
   * <code>.gw.FskModulationInfo fsk_modulation_info = 9;</code>
   * @return The fskModulationInfo.
   */
  io.chirpstack.api.gw.FskModulationInfo getFskModulationInfo();
  /**
   * <pre>
   * FSK modulation information.
   * </pre>
   *
   * <code>.gw.FskModulationInfo fsk_modulation_info = 9;</code>
   */
  io.chirpstack.api.gw.FskModulationInfoOrBuilder getFskModulationInfoOrBuilder();

  /**
   * <pre>
   * The board identifier for emitting the frame.
   * </pre>
   *
   * <code>uint32 board = 10;</code>
   * @return The board.
   */
  int getBoard();

  /**
   * <pre>
   * The antenna identifier for emitting the frame.
   * </pre>
   *
   * <code>uint32 antenna = 11;</code>
   * @return The antenna.
   */
  int getAntenna();

  /**
   * <pre>
   * Timing defines the downlink timing to use.
   * </pre>
   *
   * <code>.gw.DownlinkTiming timing = 12;</code>
   * @return The enum numeric value on the wire for timing.
   */
  int getTimingValue();
  /**
   * <pre>
   * Timing defines the downlink timing to use.
   * </pre>
   *
   * <code>.gw.DownlinkTiming timing = 12;</code>
   * @return The timing.
   */
  io.chirpstack.api.gw.DownlinkTiming getTiming();

  /**
   * <pre>
   * Immediately timing information.
   * </pre>
   *
   * <code>.gw.ImmediatelyTimingInfo immediately_timing_info = 13;</code>
   * @return Whether the immediatelyTimingInfo field is set.
   */
  boolean hasImmediatelyTimingInfo();
  /**
   * <pre>
   * Immediately timing information.
   * </pre>
   *
   * <code>.gw.ImmediatelyTimingInfo immediately_timing_info = 13;</code>
   * @return The immediatelyTimingInfo.
   */
  io.chirpstack.api.gw.ImmediatelyTimingInfo getImmediatelyTimingInfo();
  /**
   * <pre>
   * Immediately timing information.
   * </pre>
   *
   * <code>.gw.ImmediatelyTimingInfo immediately_timing_info = 13;</code>
   */
  io.chirpstack.api.gw.ImmediatelyTimingInfoOrBuilder getImmediatelyTimingInfoOrBuilder();

  /**
   * <pre>
   * Context based delay timing information.
   * </pre>
   *
   * <code>.gw.DelayTimingInfo delay_timing_info = 14;</code>
   * @return Whether the delayTimingInfo field is set.
   */
  boolean hasDelayTimingInfo();
  /**
   * <pre>
   * Context based delay timing information.
   * </pre>
   *
   * <code>.gw.DelayTimingInfo delay_timing_info = 14;</code>
   * @return The delayTimingInfo.
   */
  io.chirpstack.api.gw.DelayTimingInfo getDelayTimingInfo();
  /**
   * <pre>
   * Context based delay timing information.
   * </pre>
   *
   * <code>.gw.DelayTimingInfo delay_timing_info = 14;</code>
   */
  io.chirpstack.api.gw.DelayTimingInfoOrBuilder getDelayTimingInfoOrBuilder();

  /**
   * <pre>
   * GPS Epoch timing information.
   * </pre>
   *
   * <code>.gw.GPSEpochTimingInfo gps_epoch_timing_info = 15;</code>
   * @return Whether the gpsEpochTimingInfo field is set.
   */
  boolean hasGpsEpochTimingInfo();
  /**
   * <pre>
   * GPS Epoch timing information.
   * </pre>
   *
   * <code>.gw.GPSEpochTimingInfo gps_epoch_timing_info = 15;</code>
   * @return The gpsEpochTimingInfo.
   */
  io.chirpstack.api.gw.GPSEpochTimingInfo getGpsEpochTimingInfo();
  /**
   * <pre>
   * GPS Epoch timing information.
   * </pre>
   *
   * <code>.gw.GPSEpochTimingInfo gps_epoch_timing_info = 15;</code>
   */
  io.chirpstack.api.gw.GPSEpochTimingInfoOrBuilder getGpsEpochTimingInfoOrBuilder();

  /**
   * <pre>
   * Gateway specific context.
   * In case of a Class-A downlink, this contains a copy of the uplink context.
   * </pre>
   *
   * <code>bytes context = 16;</code>
   * @return The context.
   */
  com.google.protobuf.ByteString getContext();

  io.chirpstack.api.gw.DownlinkTxInfoLegacy.ModulationInfoCase getModulationInfoCase();

  io.chirpstack.api.gw.DownlinkTxInfoLegacy.TimingInfoCase getTimingInfoCase();
}
