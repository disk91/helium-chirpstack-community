// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: internal/internal.proto

// Protobuf Java Version: 3.25.1
package io.chirpstack.internal;

public interface RelayDeviceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:internal.RelayDevice)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Index (used for filter and uplink filters).
   * This must be between 0 - 15.
   * </pre>
   *
   * <code>uint32 index = 1;</code>
   * @return The index.
   */
  int getIndex();

  /**
   * <pre>
   * JoinEUI (EUI64).
   * </pre>
   *
   * <code>bytes join_eui = 2;</code>
   * @return The joinEui.
   */
  com.google.protobuf.ByteString getJoinEui();

  /**
   * <pre>
   * DevEUI (EUI64).
   * </pre>
   *
   * <code>bytes dev_eui = 3;</code>
   * @return The devEui.
   */
  com.google.protobuf.ByteString getDevEui();

  /**
   * <pre>
   * DevAddr.
   * </pre>
   *
   * <code>bytes dev_addr = 4;</code>
   * @return The devAddr.
   */
  com.google.protobuf.ByteString getDevAddr();

  /**
   * <pre>
   * RootWorSKey.
   * </pre>
   *
   * <code>bytes root_wor_s_key = 5;</code>
   * @return The rootWorSKey.
   */
  com.google.protobuf.ByteString getRootWorSKey();

  /**
   * <pre>
   * Provisioned.
   * </pre>
   *
   * <code>bool provisioned = 6;</code>
   * @return The provisioned.
   */
  boolean getProvisioned();

  /**
   * <pre>
   * Uplink limit bucket size.
   * </pre>
   *
   * <code>uint32 uplink_limit_bucket_size = 7;</code>
   * @return The uplinkLimitBucketSize.
   */
  int getUplinkLimitBucketSize();

  /**
   * <pre>
   * Uplink limit reload rate.
   * </pre>
   *
   * <code>uint32 uplink_limit_reload_rate = 8;</code>
   * @return The uplinkLimitReloadRate.
   */
  int getUplinkLimitReloadRate();

  /**
   * <pre>
   * Timestamp of the last WFCnt request.
   * Note that ChirpStack periodically requests the WFCnt from the relay.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp w_f_cnt_last_request = 9;</code>
   * @return Whether the wFCntLastRequest field is set.
   */
  boolean hasWFCntLastRequest();
  /**
   * <pre>
   * Timestamp of the last WFCnt request.
   * Note that ChirpStack periodically requests the WFCnt from the relay.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp w_f_cnt_last_request = 9;</code>
   * @return The wFCntLastRequest.
   */
  com.google.protobuf.Timestamp getWFCntLastRequest();
  /**
   * <pre>
   * Timestamp of the last WFCnt request.
   * Note that ChirpStack periodically requests the WFCnt from the relay.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp w_f_cnt_last_request = 9;</code>
   */
  com.google.protobuf.TimestampOrBuilder getWFCntLastRequestOrBuilder();
}
