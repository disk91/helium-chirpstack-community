
## #############################################################
## Service SETUP

# domain name like https://console.foo.bar
helium.console.url=@FULLDOMAIN@
helium.console.name=Helium Console
# email contact for being used for sending email and receive email
helium.mail.from=@CONTACTEMAIL@
# global public sign-up, can be restricted in template profile later
helium.allows.signup=true
# when false, default tenant activation must be activated manually, default true
helium.allows.activation=

## Stripe
helium.stripe.key.private=
helium.stripe.key.public=
helium.stripe.enable=false
helium.transfer.enable=true


## #############################################################
## INFRA SETUP

# MQTT
mqtt.server=tcp://mosquitto:1883
mqtt.login=
mqtt.password=
mqtt.id=

## PostgreSQL
spring.datasource.url=jdbc:postgresql://helium-postgres-1:5432/chirpstack
spring.datasource.username=chirpstack
spring.datasource.password=@DBPASSWORD@

## Redis
spring.redis.database=0
spring.redis.host=redis
spring.redis.port=6379
spring.redis.username=
spring.redis.password=
spring.redis.ssl=false
spring.redis.timeout=60000
spring.redis.consumerGroup=cgroup_10
spring.redis.consumer=consumer_0

## Helium GPRC
helium.grpc.enable=true
helium.grpc.skf.enable=true
helium.gprc.server=mainnet-config.helium.io
helium.grpc.port=6080
helium.grpc.private.keyfile.path=/etc/helium/pkey.bin
helium.grpc.public.key=@HELIUMPUBKEY@

## list the supported regions:ports
#  accepted regions : US915,EU868,EU433,CN470,CN779,AU915,AS923_1,KR920,IN865,AS923_2,AS923_3,AS923_4,AS923_1B,
#                     CD900_1A,RU864,EU868_A,EU868_B,EU868_C,EU868_D,EU868_E,EU868_F,AU915_SB1,AU915_SB2,
#                     AS923_1A,AS923_1C,AS923_1D,AS923_1E,AS923_1F
#  Rq : AU915 = AU915_SB2 corresponding to AU915_SB1 on chirpstack (AU915 zones have one SB unit difference between HPR & Chirp)
#  Rq : Helium route is given by Hotspot and not related to frequency, this is why hotspot configured HPR:AU915 does not send
#       traffic on HPR:AU915_SB2 even if the frequencies are the same.
helium.route.regions=EU868:1700,US915:1701,AU915:1702,AS923_1:1703,AS923_2:1704,AS923_3:1705,AS923_4:1706,IN865:1707,KR920:1708
# route host (the IP/DNS the helium router will use to reach your chirpstack gw bridge endpoints)
helium.route.host=@DOMAIN@
# router associated NETID like 000024
helium.route.netid=@NETID@
# router associated OUI
helium.route.oui=@OUI@
# default number of message copy purchased from router
helium.route.copy.default=3
helium.route.copy.max=50
# empty skf are blocked
helium.route.reject.empty.skf=true
# zone auto-detection and adaptation
helium.zone.detection.enable=false

## Chirpstack API & Others
chirpstack.api.base=http://chirpstack:8080
chirpstack.api.admin.key=@APIADMINKEY@
chirpstack.dedup.delay.ms=350

## Console API
#   key for JWT signature, please enter a random 64 char string
#   run twice echo $RANDOM | md5sum | head -c 32; echo;
helium.jwt.signature.key=@JWTSIGNKEY@


## #############################################################
## BILLING RULES

#  authorized minimum DC balance value before stopping communications
helium.billing.dcBalanceStop=0
#  free initial DCs for new tenant (by default make sure we are going to have enough #changeMe)
helium.billing.freeTenantDc=100000000
#  cost to receive an uplink message per 24 byte payload data
helium.billing.dcPer24BytesMessage=1
#  cost to receive each uplink duplicate (multi-buy)
helium.billing.dcPer24BDuplicate=1
#  cost to send a downlink per 24 byte data
helium.billing.dcPer24BDownlink=0
#  cost to process a join request
helium.billing.dcPerJoinRequest=0
#  max join request duplicate invoiced use -1 for all, 0 for none
helium.billing.maxJoinRequestDup=-1
#  cost to process join Accept
helium.billing.dcPerJoinAccept=0
#  device insertion cost in DCs
helium.billing.dcPerDeviceInserted=0
#  device cost for inactivity per period (here disable), the calculation will not be under two days
helium.billing.inactivityBillingPeriodMs=0
helium.billing.dcPerInactivityPeriod=0
#  device cost for activity per period (here disable)
helium.billing.activityBillingPeriod=0
helium.billing.dcPerActivityPeriod=0
#  limit devices to a maximum of DCs for each, after device becomes deactivated
helium.billing.maxDcPerDevice=0
#  limit the rate consumption for a device on a given period, device auto-disable after, period in Ms
#    The minimum period is about current day + 1 day
helium.billing.limitDcRatePerDevice=0
helium.billing.limitDcRatePeriod=0
#  price per DCs in USD
helium.billing.dc.price=0.0001
#  minimum volume of DCs a customer can acquire
helium.billing.dc.min.amount=50000
#  maximum number of tenants a user can own (0=infinite)
helium.billing.max.tenant=1
#  maximum number of devices a user can create in a single tenant
helium.billing.max.devices=0

# VAT to be used for billing 100 for 1% 1000 for 10% integer
helium.billing.vat=2000


## #############################################################
## Email configuration

# server like smtp.foo.bar
spring.mail.host=@SMTPSERVER@
# server port like 25
spring.mail.port=@SMTPPORT@
spring.mail.username=@SMTPUSER@
spring.mail.password=@SMTPPASS@

## #############################################################
## Monitoring / Alarming

# eui of a device activity tracked and reported in grafana
helium.testdevice.eui=
# admin receives an email on contact email when oui wallet is under this level
helium.oui.dc.alarm=4000000
# tenant admin get an email with the dc level is lower than the two limit above.
helium.tenant.dc.warn=30000
helium.tenant.dc.alarm=10000